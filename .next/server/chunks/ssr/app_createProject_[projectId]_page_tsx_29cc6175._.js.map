{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/aditsavani/Desktop/ext-kiro/app/createProject/%5BprojectId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useUser } from \"@clerk/nextjs\";\nimport { api } from \"../../../convex/_generated/api\";\nimport { useQuery, useMutation } from \"convex/react\";\nimport { Id } from \"../../../convex/_generated/dataModel\";\nimport {\n  ArrowRight,\n  ArrowDown,\n  BarChart,\n  CheckCircle,\n  CheckSquare,\n  ChevronDown,\n  ChevronLeft,\n  ChevronRight,\n  Circle,\n  Code,\n  Database,\n  Download,\n  FileText,\n  GitBranch,\n  Layout,\n  Lightbulb,\n  ListTodo,\n  Loader2,\n  MessageSquare,\n  MinusCircle,\n  Palette,\n  PlusCircle,\n  Server,\n  Shield,\n  Sparkles,\n  Tag,\n  Target,\n  Users,\n  Zap,\n} from \"lucide-react\";\n\n// Add custom scrollbar styles\nconst scrollbarStyles = `\n  .custom-scrollbar::-webkit-scrollbar {\n    width: 6px;\n  }\n  .custom-scrollbar::-webkit-scrollbar-track {\n    background: rgba(0, 0, 0, 0.1);\n    border-radius: 10px;\n  }\n  .custom-scrollbar::-webkit-scrollbar-thumb {\n    background: rgba(245, 158, 11, 0.3);\n    border-radius: 10px;\n  }\n  .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n    background: rgba(245, 158, 11, 0.5);\n  }\n`;\n\nexport default function ProjectCreationPage() {\n  // Add style tag for custom scrollbar\n  useEffect(() => {\n    const styleTag = document.createElement('style');\n    styleTag.innerHTML = scrollbarStyles;\n    document.head.appendChild(styleTag);\n    \n    return () => {\n      document.head.removeChild(styleTag);\n    };\n  }, []);\n  const { projectId } = useParams();\n  const router = useRouter();\n  const { user, isSignedIn, isLoaded } = useUser();\n\n  // Input states\n  const [projectName, setProjectName] = useState(\"\");\n  const [projectDescription, setProjectDescription] = useState<string>(\"\");\n  const [techStack, setTechStack] = useState<string>(\"\");\n  const [questionAnswers, setQuestionAnswers] = useState<Record<string, string>>({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [showDateModal, setShowDateModal] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [currentFeatureId, setCurrentFeatureId] = useState<Id<\"features\"> | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [expandedFeature, setExpandedFeature] = useState<string | null>(null);\n  const [selectedMember, setSelectedMember] = useState(\"\");\n  const [featureTitle, setFeatureTitle] = useState(\"\");\n  const [featureDescription, setFeatureDescription] = useState(\"\");\n  const [isAddingFeature, setIsAddingFeature] = useState(false);\n  const [isEditingFeature, setIsEditingFeature] = useState(false);\n  const [editingFeatureId, setEditingFeatureId] = useState<Id<\"features\"> | null>(null);\n  const [featuresToGenerate, setFeaturesToGenerate] = useState(3);\n  \n  // Prompt generation states\n  const [isGeneratingPrompt, setIsGeneratingPrompt] = useState(false);\n  const [generatedPrompts, setGeneratedPrompts] = useState<Array<{\n    type: 'project' | 'feature';\n    content: string;\n    featureId?: Id<\"features\">;\n    createdAt: number;\n  }>>([]);\n  \n  // Markdown export state\n  const [isGeneratingMarkdown, setIsGeneratingMarkdown] = useState(false);\n  const [isGeneratingPdf, setIsGeneratingPdf] = useState(false);\n\n  // Manual feature creation states\n  const [showManualFeatureForm, setShowManualFeatureForm] = useState(false);\n  const [manualFeature, setManualFeature] = useState({\n    title: \"\",\n    description: \"\",\n    priority: \"Medium\" as \"Low\" | \"Medium\" | \"High\" | \"Critical\",\n    effort: \"Medium\" as \"Small\" | \"Medium\" | \"Large\" | \"XL\",\n    category: \"Core\" as \"Core\" | \"Enhancement\" | \"Integration\" | \"UI/UX\" | \"Performance\" | \"Security\",\n    implementationDetails: \"\"\n  });\n\n  // Fetch data\n  const project = useQuery(api.projects.getProject, {\n    projectId: projectId as Id<\"projects\">,\n  });\n  // Fetch project members for assignment\n  const projectMembers = useQuery(\n    api.projectMembers.getProjectMembers,\n    { projectId: projectId as Id<\"projects\"> }\n  );\n  const questions = useQuery(\n    api.projects.getProjectQuestions,\n    project?.questionsGenerated ? { projectId: projectId as Id<\"projects\"> } : \"skip\"\n  );\n  const answers = useQuery(\n    api.projects.getProjectAnswers,\n    project?.questionsAnswered ? { projectId: projectId as Id<\"projects\"> } : \"skip\"\n  );\n  const features = useQuery(api.features.getProjectFeatures,\n    project && isSignedIn ? { projectId: projectId as Id<\"projects\"> } : \"skip\"\n  );\n\n  // Mutations\n  const updateProjectName = useMutation(api.projects.updateProjectName);\n  const updateProjectDescription = useMutation(api.projects.updateProjectDescription);\n  const generateProjectQuestions = useMutation(api.projects.generateProjectQuestions);\n  const saveQuestionAnswers = useMutation(api.projects.saveQuestionAnswers);\n  const generateProjectContext = useMutation(api.projects.generateProjectContext);\n  const generateProjectSummary = useMutation(api.projects.generateProjectSummary);\n  const setCurrentStep = useMutation(api.projects.setCurrentStep);\n  const createFeatures = useMutation(api.features.createFeatures);\n  const deductCreditsForFeature = useMutation(api.userPlans.deductCreditsForFeature);\n  const updateProject = useMutation(api.projects.updateProject);\n  const savePrompt = useMutation(api.prompts.savePrompt);\n  \n  // Task management mutations\n  const addFeatureToTask = useMutation(api.tasks.addFeatureToTask);\n  const removeFeatureFromTask = useMutation(api.tasks.removeFeatureFromTask);\n\n  // Initialize inputs on project load\n  useEffect(() => {\n    if (project) {\n      setProjectName(project.name || \"\");\n      setProjectDescription(project.description || \"\");\n    }\n  }, [project]);\n\n  // Initialize answers on load\n  useEffect(() => {\n    if (answers && questions && answers.length > 0 && questions.length > 0) {\n      const answerMap: Record<string, string> = {};\n      answers.forEach((ans) => {\n        if (ans.questionId && ans.answerText) {\n          answerMap[ans.questionId] = ans.answerText;\n        }\n      });\n      setQuestionAnswers(answerMap);\n    }\n  }, [answers, questions]);\n\n  // Redirect if not signed in\n  useEffect(() => {\n    if (!isLoaded) return;\n    if (!isSignedIn) router.push(\"/sign-in\");\n  }, [isSignedIn, isLoaded, router]);\n\n  // Navigate to projects list\n  const handleBackToList = () => {\n    router.push(\"/createProject\");\n  };\n\n  // Go to previous step\n  const handlePreviousStep = async () => {\n    if (!project || !project.currentStep || project.currentStep <= 1) return;\n    try {\n      setIsLoading(true);\n      await setCurrentStep({\n        projectId: projectId as Id<\"projects\">,\n        currentStep: project.currentStep - 1,\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle feature count change (clamp 1 to 3)\n  const handleFeatureCountChange = (value: number) => {\n    setFeaturesToGenerate(Math.min(Math.max(value, 1), 3));\n  };\n\n  // Handle manual feature input changes\n  const handleManualFeatureChange = (field: string, value: any) => {\n    setManualFeature(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Handle manual feature submission\n  const handleManualFeatureSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      await createFeatures({\n        projectId: projectId as Id<\"projects\">,\n        features: [{\n          title: manualFeature.title,\n          description: manualFeature.description,\n          priority: manualFeature.priority,\n          effort: manualFeature.effort,\n          category: manualFeature.category,\n          implementationDetails: manualFeature.implementationDetails || \"\",\n        }],\n      });\n      \n      // Reset form\n      setManualFeature({\n        title: \"\",\n        description: \"\",\n        priority: \"Medium\" as \"Low\" | \"Medium\" | \"High\" | \"Critical\",\n        effort: \"Medium\" as \"Small\" | \"Medium\" | \"Large\" | \"XL\",\n        category: \"Core\" as \"Core\" | \"Enhancement\" | \"Integration\" | \"UI/UX\" | \"Performance\" | \"Security\",\n        implementationDetails: \"\"\n      });\n      \n      // Hide form after successful submission\n      setShowManualFeatureForm(false);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // --- Step handlers ---\n\n  const handleNameSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      await updateProjectName({\n        projectId: projectId as Id<\"projects\">,\n        name: projectName,\n      });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDescriptionSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      await updateProjectDescription({\n        projectId: projectId as Id<\"projects\">,\n        description: projectDescription,\n        techStack: techStack || undefined,\n      });\n      await generateProjectQuestions({ projectId: projectId as Id<\"projects\"> });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleQuestionsSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const formattedAnswers = Object.entries(questionAnswers).map(\n        ([questionId, answer]) => ({\n          questionId: questionId as Id<\"projectQuestions\">,\n          answer,\n        })\n      );\n      await saveQuestionAnswers({ projectId: projectId as Id<\"projects\">, answers: formattedAnswers });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleContextSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Deduct credits for feature generation (5 credits per feature)\n      try {\n        await deductCreditsForFeature({ creditsToDeduct: 5 });\n      } catch (creditError) {\n        throw new Error(`Credit error: ${creditError instanceof Error ? creditError.message : String(creditError)}`);\n      }\n      \n      // Prepare answers for AI prompt\n      const formattedQA = (questions || []).map((q) => {\n        const answer = (answers || []).find((a) => a.questionId === q._id);\n        return { questionText: q.questionText, answer: answer?.answerText || \"\" };\n      });\n\n      // Get existing feature titles to prevent duplicates\n      const existingFeatureTitles = (features || []).map(feature => feature.title);\n\n      // Call OpenAI API with previous feature titles as context\n      const res = await fetch(\"/api/ai/generate-features\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          projectName,\n          projectDescription,\n          questionAnswers: formattedQA,\n          previousFeatures: existingFeatureTitles,\n        }),\n      });\n\n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Failed to generate features\");\n      }\n\n      const data = await res.json();\n\n      // Save the single generated feature using Convex mutation\n      type Feature = {\n        _id: Id<\"features\">;\n        title: string;\n        description?: string;\n        priority: \"Low\" | \"Medium\" | \"High\" | \"Critical\";\n        effort: \"Small\" | \"Medium\" | \"Large\" | \"XL\";\n        category: \"Core\" | \"Enhancement\" | \"Integration\" | \"UI/UX\" | \"Performance\" | \"Security\";\n        projectId: Id<\"projects\">;\n        userId?: string;\n        addedToTask?: boolean;\n        implementationDetails?: string;\n      };\n\n      await createFeatures({\n        projectId: projectId as Id<\"projects\">,\n        features: data.features.map((feature: any) => ({\n          title: feature.title,\n          description: feature.description || \"\",\n          priority: feature.priority,\n          effort: feature.effort,\n          category: feature.category,\n          implementationDetails: feature.implementationDetails || \"\",\n        })),\n      });\n\n      await generateProjectContext({ projectId: projectId as Id<\"projects\"> });\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSummarySubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      await generateProjectSummary({ projectId: projectId as Id<\"projects\"> });\n      router.push(\"/\");\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Generate Markdown content for features\n  const generateFeaturesMarkdown = () => {\n    if (!project || !features || features.length === 0) return \"\";\n    \n    const currentDate = new Date().toLocaleDateString();\n    \n    let markdown = `# ${project.name} - Project Features\n\n`;\n    markdown += `## Project Overview\n\n${project.description || \"No description provided.\"}\n\n`;\n    markdown += `*Generated on: ${currentDate}*\n\n`;\n    \n    // Group features by category\n    const categories: Record<string, typeof features> = {};\n    features.forEach(feature => {\n      if (!categories[feature.category]) {\n        categories[feature.category] = [];\n      }\n      categories[feature.category].push(feature);\n    });\n    \n    // Add features by category\n    markdown += `## Features by Category\n\n`;\n    \n    Object.entries(categories).forEach(([category, categoryFeatures]) => {\n      markdown += `### ${category}\n\n`;\n      \n      categoryFeatures.forEach((feature, index) => {\n        markdown += `#### ${index + 1}. ${feature.title}\n\n`;\n        markdown += `- **Priority:** ${feature.priority}\n`;\n        markdown += `- **Effort:** ${feature.effort}\n`;\n        markdown += `- **Added to Task:** ${feature.addedToTask ? \"Yes\" : \"No\"}\n\n`;\n        \n        markdown += `**Description:**  \n${feature.description || \"No description provided.\"}\n\n`;\n        \n        if (feature.implementationDetails) {\n          markdown += `**Implementation Details:**  \n${feature.implementationDetails}\n\n`;\n        }\n        \n        markdown += `---\n\n`;\n      });\n    });\n    \n    // Add summary statistics\n    markdown += `## Summary Statistics\n\n`;\n    markdown += `- **Total Features:** ${features.length}\n`;\n    markdown += `- **Features Added to Tasks:** ${features.filter(f => f.addedToTask).length}\n`;\n    markdown += `- **Features by Priority:**\n`;\n    \n    const priorityCounts: Record<string, number> = {};\n    features.forEach(feature => {\n      priorityCounts[feature.priority] = (priorityCounts[feature.priority] || 0) + 1;\n    });\n    \n    Object.entries(priorityCounts).forEach(([priority, count]) => {\n      markdown += `  - ${priority}: ${count}\n`;\n    });\n    \n    return markdown;\n  };\n  \n  // Handle prompt generation\n  const handleGeneratePrompt = async (type: 'project' | 'feature', featureId?: Id<\"features\">) => {\n    setIsGeneratingPrompt(true);\n    setError(null);\n    try {\n      // Prepare project data for the API\n      const projectData = {\n        projectName,\n        projectDescription,\n        features: features?.map(f => ({\n          id: f._id,\n          title: f.title,\n          description: f.description || '',\n          priority: f.priority,\n          effort: f.effort,\n          category: f.category\n        })) || []\n      };\n      \n      // Add feature-specific data if generating for a feature\n      let featureData = undefined;\n      if (type === 'feature' && featureId) {\n        const feature = features?.find(f => f._id === featureId);\n        if (feature) {\n          featureData = {\n            id: feature._id,\n            title: feature.title,\n            description: feature.description || '',\n            priority: feature.priority,\n            effort: feature.effort,\n            category: feature.category\n          };\n        }\n      }\n      \n      // Call the API to generate the prompt\n      const res = await fetch(\"/api/ai/generate-prompt\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          type,\n          project: projectData,\n          feature: featureData\n        }),\n      });\n      \n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Failed to generate prompt\");\n      }\n      \n      const data = await res.json();\n      \n      // Save the generated prompt to Convex\n      await savePrompt({\n        projectId: projectId as Id<\"projects\">,\n        featureId: type === 'feature' ? featureId : undefined,\n        content: data.prompt,\n        type: type,\n        createdAt: Date.now()\n      });\n      \n      // Update local state with the new prompt\n      setGeneratedPrompts(prev => [\n        ...prev,\n        {\n          type,\n          content: data.prompt,\n          featureId: type === 'feature' ? featureId : undefined,\n          createdAt: Date.now()\n        }\n      ]);\n      \n      // Mark the project as having prompts generated\n      if (project && !project.promptsGenerated) {\n        await updateProject({\n          projectId: projectId as Id<\"projects\">\n        });\n      }\n      \n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsGeneratingPrompt(false);\n    }\n  };\n  \n  // Handle export to markdown\n  const handleExportMarkdown = () => {\n    setIsGeneratingMarkdown(true);\n    try {\n      const markdown = generateFeaturesMarkdown();\n      if (!markdown) {\n        throw new Error(\"Failed to generate markdown content\");\n      }\n      \n      // Create a blob from the markdown content\n      const blob = new Blob([markdown], { type: 'text/markdown' });\n      const url = URL.createObjectURL(blob);\n      \n      // Create a download link and trigger it\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `${project?.name || 'project'}-features.md`;\n      document.body.appendChild(a);\n      a.click();\n      \n      // Clean up\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsGeneratingMarkdown(false);\n    }\n  };\n  \n  // Handle PDF documentation generation using OpenAI\n  const handleGeneratePdfDocumentation = async () => {\n    setIsGeneratingPdf(true);\n    setError(null);\n    try {\n      // Prepare project data for the API\n      const projectData = {\n        projectName: project?.name || '',\n        projectDescription: project?.description || '',\n        techStack: project?.techStack ? (typeof project.techStack === 'object' ? (project.techStack as any).name : project.techStack) : '',\n        features: features?.map(f => ({\n          id: f._id,\n          title: f.title,\n          description: f.description || '',\n          priority: f.priority,\n          effort: f.effort,\n          category: f.category,\n          implementationDetails: f.implementationDetails || '',\n        })) || [],\n        summary: project?.summary || ''\n      };\n      \n      // Call the API to generate PDF documentation\n      const res = await fetch(\"/api/ai/generate-documentation\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(projectData),\n      });\n      \n      if (!res.ok) {\n        const errData = await res.json();\n        throw new Error(errData.error || \"Failed to generate PDF documentation\");\n      }\n      \n      const data = await res.json();\n      \n      // Create a blob from the PDF content\n      const pdfBlob = new Blob([Buffer.from(data.pdfBase64, 'base64')], { type: 'application/pdf' });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n      \n      // Create a download link and trigger it\n      const a = document.createElement('a');\n      a.href = pdfUrl;\n      a.download = `${project?.name || 'project'}-documentation.pdf`;\n      document.body.appendChild(a);\n      a.click();\n      \n      // Clean up\n      document.body.removeChild(a);\n      URL.revokeObjectURL(pdfUrl);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : String(err));\n    } finally {\n      setIsGeneratingPdf(false);\n    }\n  };\n\n  // Input change handlers for answers\n  const handleAnswerChange = (questionId: string, value: string) => {\n    setQuestionAnswers((prev) => ({ ...prev, [questionId]: value }));\n  };\n\n  // Helper functions for feature styling\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"High\":\n        return \"border-red-500 bg-red-900/30 text-red-300\";\n      case \"Medium\":\n        return \"border-yellow-500 bg-yellow-900/30 text-yellow-300\";\n      case \"Low\":\n        return \"border-blue-500 bg-blue-900/30 text-blue-300\";\n      default:\n        return \"border-gray-500 bg-gray-900/30 text-gray-300\";\n    }\n  };\n\n  const getPriorityBadgeColor = (priority: string) => {\n    switch (priority) {\n      case \"High\":\n        return \"bg-red-600 border border-red-400\";\n      case \"Medium\":\n        return \"bg-yellow-600 border border-yellow-400\";\n      case \"Low\":\n        return \"bg-blue-600 border border-blue-400\";\n      default:\n        return \"bg-gray-600 border border-gray-400\";\n    }\n  };\n\n  const getEffortColor = (effort: string) => {\n    switch (effort) {\n      case \"High\":\n        return \"border-purple-500 bg-purple-900/30 text-purple-300\";\n      case \"Medium\":\n        return \"border-indigo-500 bg-indigo-900/30 text-indigo-300\";\n      case \"Low\":\n        return \"border-green-500 bg-green-900/30 text-green-300\";\n      default:\n        return \"border-gray-500 bg-gray-900/30 text-gray-300\";\n    }\n  };\n\n  const getEffortBadgeColor = (effort: string) => {\n    switch (effort) {\n      case \"High\":\n        return \"bg-purple-800/60 text-purple-200 border border-purple-600\";\n      case \"Medium\":\n        return \"bg-indigo-800/60 text-indigo-200 border border-indigo-600\";\n      case \"Low\":\n        return \"bg-green-800/60 text-green-200 border border-green-600\";\n      default:\n        return \"bg-gray-800/60 text-gray-200 border border-gray-600\";\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case \"UI/UX\":\n        return \"border-pink-500 bg-pink-900/30 text-pink-300\";\n      case \"Backend\":\n        return \"border-blue-500 bg-blue-900/30 text-blue-300\";\n      case \"Frontend\":\n        return \"border-purple-500 bg-purple-900/30 text-purple-300\";\n      case \"Infrastructure\":\n        return \"border-amber-500 bg-amber-900/30 text-amber-300\";\n      case \"Security\":\n        return \"border-red-500 bg-red-900/30 text-red-300\";\n      case \"Performance\":\n        return \"border-green-500 bg-green-900/30 text-green-300\";\n      case \"Analytics\":\n        return \"border-cyan-500 bg-cyan-900/30 text-cyan-300\";\n      default:\n        return \"border-gray-500 bg-gray-900/30 text-gray-300\";\n    }\n  };\n  \n  const getCategoryNodeColor = (category: string) => {\n    switch (category) {\n      case \"UI/UX\":\n        return \"from-pink-800 to-pink-700\";\n      case \"Backend\":\n        return \"from-blue-800 to-blue-700\";\n      case \"Frontend\":\n        return \"from-purple-800 to-purple-700\";\n      case \"Infrastructure\":\n        return \"from-amber-800 to-amber-700\";\n      case \"Security\":\n        return \"from-red-800 to-red-700\";\n      case \"Performance\":\n        return \"from-green-800 to-green-700\";\n      case \"Analytics\":\n        return \"from-cyan-800 to-cyan-700\";\n      default:\n        return \"from-gray-800 to-gray-700\";\n    }\n  };\n\n  const getCategoryBorderColor = (category: string) => {\n    switch (category) {\n      case \"UI/UX\":\n        return \"border-pink-500\";\n      case \"Backend\":\n        return \"border-blue-500\";\n      case \"Frontend\":\n        return \"border-purple-500\";\n      case \"Infrastructure\":\n        return \"border-amber-500\";\n      case \"Security\":\n        return \"border-red-500\";\n      case \"Performance\":\n        return \"border-green-500\";\n      case \"Analytics\":\n        return \"border-cyan-500\";\n      default:\n        return \"border-gray-500\";\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case \"UI/UX\":\n        return <Palette className=\"h-4 w-4 text-pink-300\" />;\n      case \"Backend\":\n        return <Database className=\"h-4 w-4 text-blue-300\" />;\n      case \"Frontend\":\n        return <Layout className=\"h-4 w-4 text-purple-300\" />;\n      case \"Infrastructure\":\n        return <Server className=\"h-4 w-4 text-amber-300\" />;\n      case \"Security\":\n        return <Shield className=\"h-4 w-4 text-red-300\" />;\n      case \"Performance\":\n        return <Zap className=\"h-4 w-4 text-green-300\" />;\n      case \"Analytics\":\n        return <BarChart className=\"h-4 w-4 text-cyan-300\" />;\n      default:\n        return <Tag className=\"h-4 w-4 text-gray-300\" />;\n    }\n  };\n\n  if (!project) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-950 via-gray-900 to-purple-950 flex items-center justify-center p-4\">\n        <div className=\"w-full max-w-4xl\">\n          <div className=\"bg-gray-900 rounded-xl shadow-lg p-8\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-blue-400 mx-auto mb-6\" />\n            <h1 className=\"text-2xl font-bold text-center mb-4 text-gray-200\">Loading project...</h1>\n            <div className=\"space-y-3\">\n              <div className=\"animate-pulse bg-gray-700 h-4 w-full rounded\"></div>\n              <div className=\"animate-pulse bg-gray-700 h-4 w-3/4 rounded\"></div>\n              <div className=\"animate-pulse bg-gray-700 h-4 w-1/2 rounded\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Progress bar width as percent\n  const progress = ((project.currentStep - 1) / project.totalSteps) * 100;\n\n  // Steps config for progress bar\n  const stepConfig = [\n    { label: \"Project Name\", icon: FileText, color: \"blue\" },\n    { label: \"Description\", icon: FileText, color: \"indigo\" },\n    { label: \"Questions\", icon: Users, color: \"purple\" },\n    { label: \"Features\", icon: Target, color: \"pink\" },\n    { label: \"Prompts\", icon: MessageSquare, color: \"amber\" },\n    { label: \"Summary\", icon: CheckCircle, color: \"green\" },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br bg-black text-gray-200 p-4\">\n      <div className=\"max-w-7xl mx-auto py-8\">\n\n        {/* Back to projects list */}\n        <button onClick={handleBackToList} disabled={isLoading} className=\"mb-6 inline-flex items-center px-4 py-2 bg-gray-800 rounded hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500\">\n          <ChevronLeft className=\"mr-2 h-5 w-5\" /> Back to Projects\n        </button>\n\n        \n\n        <div className=\"bg-gray-900 rounded-xl shadow-lg p-6 mb-8\">\n          <div className=\"w-full bg-gray-800 rounded-full h-3 mb-6\">\n            <div className=\"bg-gradient-to-r from-blue-500 to-purple-600 h-3 rounded-full transition-all duration-500 ease-out\" style={{ width: `${progress}%` }}></div>\n          </div>\n          <div className=\"flex justify-between\">\n            {stepConfig.map((step, i) => {\n              const Icon = step.icon;\n              const isCompleted = i < project.currentStep - 1;\n              const isCurrent = i === project.currentStep - 1;\n              return (\n                <div key={i} className=\"flex flex-col items-center\">\n                  <div className={`w-12 h-12 rounded-full flex items-center justify-center mb-2 transition-all duration-300 ${\n                    isCompleted\n                      ? \"bg-green-600 text-gray-100 shadow-lg\"\n                      : isCurrent\n                      ? `bg-${step.color}-600 text-gray-100 shadow-lg animate-pulse`\n                      : \"bg-gray-800 text-gray-500\"\n                  }`}>\n                    {isCompleted ? <CheckCircle className=\"h-6 w-6\" /> : <Icon className=\"h-6 w-6\" />}\n                  </div>\n                  <span className={`text-xs font-medium ${isCurrent ? \"text-gray-100\" : \"text-gray-500\"}`}>{step.label}</span>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Main form card */}\n        <div className=\"bg-gray-900 rounded-xl shadow-lg overflow-hidden p-8\">\n          {error && (\n            <div className=\"bg-red-900 border-l-4 border-red-700 p-4 mb-6 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Circle className=\"h-5 w-5 text-red-600\" />\n                <p className=\"text-sm text-red-400\">{error}</p>\n              </div>\n            </div>\n          )}\n\n          {/* Step 1: Project Name */}\n          {project.currentStep === 1 && (\n            <form onSubmit={handleNameSubmit} className=\"space-y-6\">\n              <div className=\"text-center mb-8\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-blue-800 rounded-full mb-4\">\n                  <FileText className=\"h-8 w-8 text-blue-300\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">What's your project name?</h2>\n                <p className=\"text-gray-400\">Give your project a memorable name that captures its essence</p>\n              </div>\n              <div>\n                <label htmlFor=\"projectName\" className=\"block text-sm font-medium mb-2\">Project Name</label>\n                <input\n                  id=\"projectName\"\n                  type=\"text\"\n                  value={projectName}\n                  onChange={(e) => setProjectName(e.target.value)}\n                  placeholder=\"Enter your amazing project name\"\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors text-lg\"\n                />\n              </div>\n              <div className=\"flex justify-between\">\n                {/* No previous step button on first step */}\n                <div />\n                <button\n                  type=\"submit\"\n                  disabled={isLoading || !projectName.trim()}\n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-700 text-white font-medium rounded-lg shadow-lg hover:from-blue-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  {isLoading ? <><Loader2 className=\"animate-spin h-5 w-5 mr-2\" />Saving...</> : <>Next Step<ChevronRight className=\"ml-2 h-5 w-5\" /></>}\n                </button>\n              </div>\n            </form>\n          )}\n\n          {/* Step 2: Description */}\n          {project.currentStep === 2 && (\n            <form onSubmit={handleDescriptionSubmit} className=\"space-y-6\">\n              <div className=\"text-center mb-8\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-indigo-800 rounded-full mb-4\">\n                  <FileText className=\"h-8 w-8 text-indigo-300\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">Describe your project</h2>\n                <p className=\"text-gray-400\">Tell us about your project vision, goals, and requirements</p>\n              </div>\n              <div>\n                <label htmlFor=\"projectDescription\" className=\"block text-sm font-medium mb-2\">Project Description</label>\n                <textarea\n                  id=\"projectDescription\"\n                  rows={6}\n                  value={projectDescription}\n                  onChange={(e) => setProjectDescription(e.target.value)}\n                  placeholder=\"Describe your project in detail. What problem does it solve? Who are your users? What are the main features you envision?\"\n                  required\n                  className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors resize-none\"\n                />\n                <p className=\"mt-2 text-sm text-gray-500\">💡 The more detailed your description, the better questions we can generate for you</p>\n              </div>\n              \n              <div>\n                <label htmlFor=\"techStack\" className=\"block text-sm font-medium mb-2\">Tech Stack</label>\n                <select\n                  id=\"techStack\"\n                  value={techStack || \"\"}\n                  onChange={(e) => setTechStack(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n                >\n                  <option value=\"\">Select a tech stack</option>\n                  <option value=\"nextjs-supabase\">Next.js + Supabase</option>\n                  <option value=\"nextjs-convex\">Next.js + Convex</option>\n                  <option value=\"mern\">MERN Stack (MongoDB, Express, React, Node)</option>\n                  <option value=\"reactjs-supabase\">React.js + Supabase</option>\n                  <option value=\"reactjs-convex\">React.js + Convex</option>\n                </select>\n                <p className=\"mt-2 text-sm text-gray-500\">Select the tech stack you want to use for your project</p>\n              </div>\n              <div className=\"flex justify-between\">\n                <button\n                  type=\"button\"\n                  onClick={handlePreviousStep}\n                  disabled={isLoading}\n                  className=\"inline-flex items-center px-6 py-3 border border-gray-700 text-gray-400 rounded-lg shadow-sm hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 transition-colors\"\n                >\n                  <ChevronLeft className=\"mr-2 h-5 w-5\" /> Previous Step\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isLoading || !projectDescription.trim()}\n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-indigo-600 to-purple-700 text-white font-medium rounded-lg shadow-lg hover:from-indigo-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  {isLoading ? <><Loader2 className=\"animate-spin h-5 w-5 mr-2\" />Generating Questions...</> : <>Next Step<ChevronRight className=\"ml-2 h-5 w-5\"/></>}\n                </button>\n              </div>\n            </form>\n          )}\n\n          {/* Step 3: Questions */}\n          {project.currentStep === 3 && questions && (\n            <form onSubmit={handleQuestionsSubmit} className=\"space-y-6\">\n              <div className=\"text-center mb-8\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-purple-800 rounded-full mb-4\">\n                  <Users className=\"h-8 w-8 text-purple-300\" />\n                </div>\n                <h2 className=\"text-2xl font-bold mb-2\">Project Questions</h2>\n                <p className=\"text-gray-400\">AI-generated questions to better understand your project needs</p>\n              </div>\n              <div className=\"space-y-6\">\n                {questions.map((q, i) => (\n                  <div key={q._id} className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\n                    <div className=\"flex items-start space-x-3\">\n                      <div className=\"flex-shrink-0 w-8 h-8 bg-purple-700 rounded-full flex items-center justify-center\">\n                        <span className=\"text-sm font-medium text-purple-300\">{i + 1}</span>\n                      </div>\n                      <div className=\"flex-1\">\n                        <label htmlFor={q._id} className=\"block text-sm font-medium mb-3\">\n                          {q.questionText}{q.isRequired && <span className=\"text-red-500 ml-1\">*</span>}\n                        </label>\n                        {q.inputType === \"textarea\" ? (\n                          <textarea\n                            id={q._id}\n                            value={questionAnswers[q._id] || \"\"}\n                            onChange={(e) => handleAnswerChange(q._id, e.target.value)}\n                            rows={4}\n                            placeholder={q.placeholderText || \"Your answer\"}\n                            required={q.isRequired}\n                            className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors resize-none\"\n                          />\n                        ) : (\n                          <input\n                            id={q._id}\n                            type=\"text\"\n                            value={questionAnswers[q._id] || \"\"}\n                            onChange={(e) => handleAnswerChange(q._id, e.target.value)}\n                            placeholder={q.placeholderText || \"Your answer\"}\n                            required={q.isRequired}\n                            className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-colors\"\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex justify-between\">\n                <button\n                  type=\"button\"\n                  onClick={handlePreviousStep}\n                  disabled={isLoading}\n                  className=\"inline-flex items-center px-6 py-3 border border-gray-700 text-gray-400 rounded-lg shadow-sm hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 transition-colors\"\n                >\n                  <ChevronLeft className=\"mr-2 h-5 w-5\" />\n                  Previous Step\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isLoading || questions.some((q) => q.isRequired && !questionAnswers[q._id]?.trim())}\n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-700 text-white font-medium rounded-lg shadow-lg hover:from-purple-700 hover:to-pink-800 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  {isLoading ? <><Loader2 className=\"animate-spin mr-2 h-5 w-5\" />Saving Answers...</> : <>Next Step<ChevronRight className=\"ml-2 h-5 w-5\" /></>}\n                </button>\n              </div>\n            </form>\n          )}\n\n          {/* Step 4: Feature Generation */}\n          {project.currentStep === 4 && (\n            <>\n              <form onSubmit={handleContextSubmit} className=\"space-y-6\">\n                \n                \n                {/* Interactive Control Panel */}\n                <div className=\"relative bg-gradient-to-b from-gray-900 to-purple-900/20 rounded-xl border border-purple-800/50 p-6 mb-8 overflow-hidden\">\n                  {/* Background decorative elements */}\n                  <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(219,39,119,0.15),transparent_50%),radial-gradient(circle_at_70%_60%,rgba(124,58,237,0.15),transparent_50%)]\" />\n                  <div className=\"absolute inset-0\" style={{\n                    backgroundImage: 'linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px), linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)',\n                    backgroundSize: '20px 20px'\n                  }} />\n                  \n                  <div className=\"relative z-10\">\n                    <div className=\"flex flex-col md:flex-row items-center justify-between gap-6 mb-6\">\n                      {/* Project Info Card */}\n                      <div className=\"bg-gray-900/70 backdrop-blur-sm rounded-lg p-5 border border-purple-700/50 w-full md:w-2/3 shadow-lg\">\n                        <div className=\"flex items-start\">\n                          <div className=\"bg-gradient-to-br from-pink-600 to-purple-700 rounded-full p-2 mr-4\">\n                            <Lightbulb className=\"h-6 w-6 text-white\" />\n                          </div>\n                          <div>\n                            <h3 className=\"font-semibold text-lg text-gray-100 mb-2\">Project Brief</h3>\n                            <p className=\"text-sm text-gray-300 mb-2 font-medium\">{project.name}</p>\n                            <p className=\"text-sm text-gray-400 line-clamp-2\">{project.description}</p>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Feature Generation Controls */}\n                      <div className=\"bg-gray-900/70 backdrop-blur-sm rounded-lg p-5 border border-purple-700/50 w-full md:w-1/3 shadow-lg\">\n                        \n                        <div className=\"flex items-center justify-between gap-4 mb-4\">\n                          <div className=\"flex-1\">\n                            \n                            <div className=\"relative\">\n                              \n                              <p>Generate Features</p>\n                            </div>\n                          </div>\n                          \n                          \n                            <button\n                              type=\"submit\"\n                              disabled={isLoading}\n                              className=\"flex-shrink-0 inline-flex items-center px-4 py-2.5 bg-gradient-to-r from-pink-600 to-purple-700 text-white font-medium rounded-lg shadow-lg hover:from-pink-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                            >\n                              {isLoading ? (\n                                <>\n                                  <Loader2 className=\"animate-spin h-5 w-5 mr-2\" />\n                                  Generating...\n                                </>\n                              ) : (\n                                <>\n                                  <Sparkles className=\"mr-2 h-5 w-5\" />\n                                  Generate\n                                </>\n                              )}\n                            </button>\n                        \n                        </div>\n\n                        <div className=\"border-t border-purple-700/30 pt-4 mt-4\">\n                          <button\n                            type=\"button\"\n                            onClick={() => setShowManualFeatureForm(!showManualFeatureForm)}\n                            className=\"w-full flex items-center justify-center px-3 py-2 bg-gradient-to-r from-blue-600 to-indigo-700 text-white text-sm font-medium rounded-lg hover:from-blue-700 hover:to-indigo-800 transition-colors shadow-md\"\n                          >\n                            <PlusCircle className=\"h-4 w-4 mr-2\" />\n                            {showManualFeatureForm ? \"Hide Manual Form\" : \"Add Feature Manually\"}\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </form>\n\n              {/* Manual Feature Creation Form */}\n              {showManualFeatureForm && (\n                <div className=\"relative bg-gradient-to-b from-gray-900 to-indigo-900/20 rounded-xl border border-indigo-800/50 p-6 mb-8 overflow-hidden\">\n                  <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(79,70,229,0.15),transparent_50%),radial-gradient(circle_at_70%_60%,rgba(124,58,237,0.15),transparent_50%)]\" />\n                  <div className=\"absolute inset-0\" style={{\n                    backgroundImage: 'linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px), linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)',\n                    backgroundSize: '20px 20px'\n                  }} />\n                  \n                  <div className=\"relative z-10\">\n                    <h3 className=\"text-xl font-bold flex items-center text-transparent bg-gradient-to-r from-indigo-400 to-blue-500 bg-clip-text mb-6\">\n                      <PlusCircle className=\"h-6 w-6 mr-2 text-indigo-400\" />\n                      Add Feature Manually\n                    </h3>\n                    \n                    <div className=\"space-y-6\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div className=\"space-y-4\">\n                          <div>\n                            <label htmlFor=\"featureTitle\" className=\"block text-sm font-medium mb-2 text-gray-300\">Feature Title*</label>\n                            <input\n                              id=\"featureTitle\"\n                              type=\"text\"\n                              value={manualFeature.title}\n                              onChange={(e) => handleManualFeatureChange('title', e.target.value)}\n                              placeholder=\"Enter feature title\"\n                              required\n                              className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n                            />\n                          </div>\n                          \n                          <div>\n                            <label htmlFor=\"featureDescription\" className=\"block text-sm font-medium mb-2 text-gray-300\">Description*</label>\n                            <textarea\n                              id=\"featureDescription\"\n                              rows={4}\n                              value={manualFeature.description}\n                              onChange={(e) => handleManualFeatureChange('description', e.target.value)}\n                              placeholder=\"Describe the feature in detail\"\n                              required\n                              className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors resize-none\"\n                            />\n                          </div>\n                          \n                          <div>\n                            <label htmlFor=\"featureImplementation\" className=\"block text-sm font-medium mb-2 text-gray-300\">Implementation Details</label>\n                            <textarea\n                              id=\"featureImplementation\"\n                              rows={4}\n                              value={manualFeature.implementationDetails}\n                              onChange={(e) => handleManualFeatureChange('implementationDetails', e.target.value)}\n                              placeholder=\"Optional implementation details or technical notes\"\n                              className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors resize-none\"\n                            />\n                          </div>\n                        </div>\n                        \n                        <div className=\"space-y-4\">\n                          <div>\n                            <label htmlFor=\"featurePriority\" className=\"block text-sm font-medium mb-2 text-gray-300\">Priority*</label>\n                            <select\n                              id=\"featurePriority\"\n                              value={manualFeature.priority}\n                              onChange={(e) => handleManualFeatureChange('priority', e.target.value)}\n                              required\n                              className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n                            >\n                              <option value=\"Low\">Low</option>\n                              <option value=\"Medium\">Medium</option>\n                              <option value=\"High\">High</option>\n                              <option value=\"Critical\">Critical</option>\n                            </select>\n                          </div>\n                          \n                          <div>\n                            <label htmlFor=\"featureEffort\" className=\"block text-sm font-medium mb-2 text-gray-300\">Effort*</label>\n                            <select\n                              id=\"featureEffort\"\n                              value={manualFeature.effort}\n                              onChange={(e) => handleManualFeatureChange('effort', e.target.value)}\n                              required\n                              className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n                            >\n                              <option value=\"Small\">Small</option>\n                              <option value=\"Medium\">Medium</option>\n                              <option value=\"Large\">Large</option>\n                              <option value=\"XL\">XL</option>\n                            </select>\n                          </div>\n                          \n                          <div>\n                            <label htmlFor=\"featureCategory\" className=\"block text-sm font-medium mb-2 text-gray-300\">Category*</label>\n                            <select\n                              id=\"featureCategory\"\n                              value={manualFeature.category}\n                              onChange={(e) => handleManualFeatureChange('category', e.target.value)}\n                              required\n                              className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n                            >\n                              <option value=\"Core\">Core</option>\n                              <option value=\"Enhancement\">Enhancement</option>\n                              <option value=\"Integration\">Integration</option>\n                              <option value=\"UI/UX\">UI/UX</option>\n                              <option value=\"Performance\">Performance</option>\n                              <option value=\"Security\">Security</option>\n                            </select>\n                          </div>\n                          \n                          <div className=\"pt-4\">\n                            <button\n                              type=\"button\"\n                              onClick={handleManualFeatureSubmit}\n                              disabled={isLoading || !manualFeature.title || !manualFeature.description}\n                              className=\"w-full inline-flex items-center justify-center px-6 py-3 bg-gradient-to-r from-indigo-600 to-blue-700 text-white font-medium rounded-lg shadow-lg hover:from-indigo-700 hover:to-blue-800 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                            >\n                              {isLoading ? (\n                                <>\n                                  <Loader2 className=\"animate-spin h-5 w-5 mr-2\" />\n                                  Saving...\n                                </>\n                              ) : (\n                                <>\n                                  <PlusCircle className=\"mr-2 h-5 w-5\" />\n                                  Add Feature\n                                </>\n                              )}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <form onSubmit={handleContextSubmit} className=\"space-y-6\">\n\n                {/* Feature Showcase */}\n                {features && features.length > 0 && (\n                  <div className=\"relative bg-gradient-to-b from-gray-900 to-pink-900/20 rounded-xl border border-pink-800/50 p-6 mb-8 overflow-hidden\">\n                    {/* Background decorative elements */}\n                    <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_70%_30%,rgba(219,39,119,0.15),transparent_50%),radial-gradient(circle_at_30%_70%,rgba(124,58,237,0.15),transparent_50%)]\" />\n                    <div className=\"absolute inset-0\" style={{\n                      backgroundImage: 'linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px), linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)',\n                      backgroundSize: '20px 20px'\n                    }} />\n                    \n                    <div className=\"relative z-10\">\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <h3 className=\"text-xl font-bold flex items-center text-transparent bg-gradient-to-r from-pink-400 to-purple-500 bg-clip-text\">\n                          <Sparkles className=\"h-6 w-6 mr-2 text-yellow-400\" />\n                          AI-Generated Features\n                        </h3>\n                        \n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-xs text-gray-400 bg-gray-800/80 px-2 py-1 rounded-md border border-gray-700\">\n                            {features.filter(f => f.addedToTask).length}/{features.length} Added to Tasks\n                          </span>\n                        </div>\n                      </div>\n                      \n                      {/* Feature Cards with 3D effect */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 max-h-[500px] overflow-y-auto pr-2 pb-2\">\n                        {features.map((feature, index) => (\n                          <div \n                            key={feature._id}\n                            className={`group relative bg-gradient-to-br ${feature.addedToTask ? \n                              'from-green-900/80 to-emerald-900/80 border-green-600/70' : \n                              'from-gray-900/90 to-gray-800/90 border-gray-700/70'} \n                            rounded-xl border shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1 transform perspective-1000`}\n                          >\n                            {/* Category ribbon */}\n                            <div className=\"absolute -right-12 top-6 transform rotate-45 z-10\">\n                              <div className={`w-36 py-1 text-center text-xs font-semibold ${getCategoryColor(feature.category)}`}>\n                                {feature.category}\n                              </div>\n                            </div>\n                            \n                            {/* Priority indicator */}\n                            <div className=\"absolute top-3 left-3\">\n                              <div className={`flex items-center ${getPriorityColor(feature.priority)} rounded-full px-2 py-1 text-xs font-medium`}>\n                                <span className=\"flex h-2 w-2 rounded-full mr-1.5 animate-pulse\"></span>\n                                {feature.priority}\n                              </div>\n                            </div>\n                            \n                            <div className=\"p-6\">\n                              <div className=\"mt-5 mb-4\">\n                                <h4 className=\"text-xl font-semibold text-gray-100\">{feature.title}</h4>\n                              </div>\n                              \n                              <p className=\"text-gray-300 mb-5 line-clamp-3\">{feature.description}</p>\n                              \n                              <div className=\"flex flex-wrap gap-2 mb-5\">\n                                <span className={`inline-flex items-center px-2.5 py-1 rounded-md text-xs font-medium ${getEffortColor(feature.effort)}`}>\n                                  <Target className=\"h-3 w-3 mr-1\" /> {feature.effort} Effort\n                                </span>\n                                \n                                {feature.addedToTask && (\n                                  <span className=\"inline-flex items-center px-2.5 py-1 rounded-md text-xs font-medium bg-green-800/60 text-green-200 border border-green-600\">\n                                    <CheckSquare className=\"h-3 w-3 mr-1\" /> Task Created\n                                  </span>\n                                )}\n                              </div>\n                              \n                              {/* Action buttons */}\n                              <div className=\"flex items-center justify-between pt-2 border-t border-gray-700/50\">\n                                <button\n                                  onClick={() => setExpandedFeature(expandedFeature === feature._id ? null : feature._id)}\n                                  className=\"text-xs font-medium flex items-center text-blue-400 hover:text-blue-300 transition-colors\"\n                                >\n                                  {expandedFeature === feature._id ? \"Hide Details\" : \"View Details\"}\n                                  <ChevronRight className={`ml-1 h-3 w-3 transition-transform ${expandedFeature === feature._id ? \"rotate-90\" : \"\"}`} />\n                                </button>\n                                \n                                {!feature.addedToTask ? (\n                                  <button\n                                    onClick={(e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      setCurrentFeatureId(feature._id);\n                                      setSelectedDate(\"\"); // Reset date when opening modal\n                                      setShowDateModal(true);\n                                    }}\n                                    className=\"flex items-center px-3 py-1.5 bg-gradient-to-r from-green-600 to-emerald-700 text-white text-xs font-medium rounded-lg hover:from-green-700 hover:to-emerald-800 transition-colors shadow-md\"\n                                    title=\"Add to Task\"\n                                  >\n                                    <PlusCircle className=\"h-3.5 w-3.5 mr-1\" />\n                                    Add to Tasks\n                                  </button>\n                                ) : (\n                                  <button\n                                    onClick={async (e) => {\n                                      e.preventDefault();\n                                      e.stopPropagation();\n                                      setIsLoading(true);\n                                      try {\n                                        await removeFeatureFromTask({\n                                          featureId: feature._id\n                                        });\n                                      } catch (err) {\n                                        setError(err instanceof Error ? err.message : String(err));\n                                      } finally {\n                                        setIsLoading(false);\n                                      }\n                                    }}\n                                    className=\"flex items-center px-3 py-1.5 bg-gradient-to-r from-red-600 to-red-700 text-white text-xs font-medium rounded-lg hover:from-red-700 hover:to-red-800 transition-colors shadow-md\"\n                                    title=\"Remove from Task\"\n                                  >\n                                    <MinusCircle className=\"h-3.5 w-3.5 mr-1\" />\n                                    Remove Task\n                                  </button>\n                                )}\n                              </div>\n                            </div>\n                            \n                            {/* Expanded details */}\n                            {expandedFeature === feature._id && (\n                              <div className=\"p-5 bg-black/30 border-t border-gray-700/50\">\n                                <h5 className=\"font-semibold mb-3 flex items-center text-gray-100\">\n                                  <Code className=\"h-4 w-4 mr-2 text-pink-400\" />\n                                  Implementation Guide\n                                </h5>\n                                <p className=\"text-sm text-gray-300 mb-4\">\n                                  {feature.implementationDetails || \"This feature can be implemented using modern web technologies. Start by creating the core functionality and then add user interface components.\"}\n                                </p>\n                                <div className=\"space-y-2\">\n                                  <p className=\"text-xs font-medium text-gray-400\">Recommended Steps:</p>\n                                  <ul className=\"list-disc list-inside text-xs text-gray-400 space-y-1\">\n                                    <li>Define the feature requirements and scope</li>\n                                    <li>Create wireframes and design mockups</li>\n                                    <li>Implement core functionality</li>\n                                    <li>Add user interface components</li>\n                                    <li>Test and refine the implementation</li>\n                                  </ul>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"flex justify-between\">\n                  <button\n                    type=\"button\"\n                    onClick={handlePreviousStep}\n                    disabled={isLoading}\n                    className=\"inline-flex items-center px-6 py-3 border border-gray-700 text-gray-400 rounded-lg shadow-sm hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 transition-colors\"\n                  >\n                    <ChevronLeft className=\"mr-2 h-5 w-5\" />\n                    Previous Step\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    onClick={async () => {\n                      setIsLoading(true);\n                      setError(null);\n                      try {\n                        await setCurrentStep({ projectId: projectId as Id<\"projects\">, currentStep: 5 });\n                      } catch (err) {\n                        setError(err instanceof Error ? err.message : String(err));\n                      } finally {\n                        setIsLoading(false);\n                      }\n                    }}\n                    disabled={isLoading}\n                    className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-pink-600 to-purple-700 text-white font-medium rounded-lg shadow-lg hover:from-pink-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                  >\n                    Next Step\n                    <ChevronRight className=\"ml-2 h-5 w-5\" />\n                  </button>\n                </div>\n              </form>\n            </>\n          )}\n\n          {/* Step 5: Prompt Generation */}\n          {project.currentStep === 5 && features && (\n            <form onSubmit={(e) => {\n              e.preventDefault();\n              setIsLoading(true);\n              setError(null);\n              try {\n                setCurrentStep({ projectId: projectId as Id<\"projects\">, currentStep: 6 });\n              } catch (err) {\n                setError(err instanceof Error ? err.message : String(err));\n              } finally {\n                setIsLoading(false);\n              }\n            }} className=\"space-y-6\">\n              <div className=\"text-center mb-8\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 bg-amber-800 rounded-full mb-4\">\n                  <MessageSquare className=\"h-8 w-8 text-amber-200\" />\n                </div>\n                <h2 className=\"text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-amber-400 to-yellow-500\">\n                  Generate AI Prompts\n                </h2>\n                <p className=\"text-gray-400 mt-2 max-w-2xl mx-auto\">\n                  Create AI prompts for your project or specific features to help with implementation.\n                </p>\n              </div>\n\n              <div className=\"relative bg-gradient-to-b from-gray-900 to-amber-900/20 rounded-xl border border-amber-800/50 p-6 mb-8 overflow-hidden\">\n                <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(251,191,36,0.15),transparent_50%),radial-gradient(circle_at_70%_60%,rgba(245,158,11,0.15),transparent_50%)]\" />\n                <div className=\"absolute inset-0\" style={{\n                  backgroundImage: 'linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px), linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)',\n                  backgroundSize: '20px 20px'\n                }} />\n                \n                <div className=\"relative z-10\">\n                  <h3 className=\"text-xl font-bold flex items-center text-transparent bg-gradient-to-r from-amber-400 to-yellow-500 bg-clip-text mb-6\">\n                    <Sparkles className=\"h-6 w-6 mr-2 text-amber-400\" />\n                    Prompt Generation Options\n                  </h3>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    {/* Project-level prompt */}\n                    <div className=\"bg-gray-900/70 backdrop-blur-sm rounded-lg p-5 border border-amber-700/50 shadow-lg hover:shadow-amber-900/20 hover:border-amber-600/70 transition-all duration-300 transform hover:-translate-y-1\">\n                      <div className=\"flex items-start mb-4\">\n                        <div className=\"bg-gradient-to-br from-amber-600 to-yellow-700 rounded-full p-2 mr-4\">\n                          <Lightbulb className=\"h-6 w-6 text-white\" />\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-lg text-gray-100\">Project Prompt</h4>\n                          <p className=\"text-sm text-gray-300 mt-1\">\n                            Generate a comprehensive prompt for the entire project that covers all aspects.\n                          </p>\n                        </div>\n                      </div>\n                      \n                      <button\n                        type=\"button\"\n                        onClick={() => handleGeneratePrompt('project')}\n                        disabled={isGeneratingPrompt}\n                        className=\"w-full flex items-center justify-center px-4 py-2.5 bg-gradient-to-r from-amber-600 to-yellow-700 text-white font-medium rounded-lg shadow-lg hover:from-amber-700 hover:to-yellow-800 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                      >\n                        {isGeneratingPrompt ? (\n                          <>\n                            <Loader2 className=\"animate-spin h-5 w-5 mr-2\" />\n                            Generating...\n                          </>\n                        ) : (\n                          <>\n                            <Sparkles className=\"mr-2 h-5 w-5\" />\n                            Generate Project Prompt\n                          </>\n                        )}\n                      </button>\n                    </div>\n                    \n                    {/* Feature-level prompts */}\n                    <div className=\"bg-gray-900/70 backdrop-blur-sm rounded-lg p-5 border border-amber-700/50 shadow-lg hover:shadow-amber-900/20 hover:border-amber-600/70 transition-all duration-300 transform hover:-translate-y-1\">\n                      <div className=\"flex items-start mb-4\">\n                        <div className=\"bg-gradient-to-br from-amber-600 to-yellow-700 rounded-full p-2 mr-4\">\n                          <Target className=\"h-6 w-6 text-white\" />\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-lg text-gray-100\">Feature Prompts</h4>\n                          <p className=\"text-sm text-gray-300 mt-1\">\n                            Generate prompts for features added to tasks.\n                          </p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 gap-2\">\n                        {features && features.length > 0 ? (\n                          features\n                            .filter(feature => feature.addedToTask) // Only show features added to tasks\n                            .map((feature) => (\n                              <button\n                                key={feature._id}\n                                type=\"button\"\n                                onClick={() => handleGeneratePrompt('feature', feature._id)}\n                                disabled={isGeneratingPrompt}\n                                className=\"flex items-center justify-between px-3 py-1.5 bg-gray-800 text-gray-200 text-sm rounded-lg hover:bg-gray-700 focus:outline-none focus:ring-1 focus:ring-amber-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                              >\n                                <span className=\"truncate mr-2\">{feature.title}</span>\n                                <Sparkles className=\"h-3.5 w-3.5 text-amber-400 flex-shrink-0\" />\n                              </button>\n                            ))\n                        ) : (\n                          <p className=\"text-gray-400 text-sm col-span-2\">No features added to tasks</p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Generated Prompts Display - Compact Version */}\n                  {generatedPrompts.length > 0 && (\n                    <div className=\"mt-6\">\n                      <h4 className=\"text-md font-semibold text-amber-400 mb-3 flex items-center\">\n                        <MessageSquare className=\"h-4 w-4 mr-2\" />\n                        Generated Prompts\n                      </h4>\n                      <div className=\"max-h-[300px] overflow-y-auto pr-2 custom-scrollbar\">\n                        <div className=\"space-y-2\">\n                          {generatedPrompts.map((prompt, index) => (\n                            <details key={index} className=\"bg-gray-800/80 border border-amber-700/30 rounded-lg shadow-sm group\">\n                              <summary className=\"flex justify-between items-center p-2 cursor-pointer hover:bg-gray-700/50 rounded-lg\">\n                                <div className=\"flex items-center\">\n                                  <span className=\"inline-flex items-center justify-center h-6 w-6 rounded-full bg-amber-700/50 mr-2\">\n                                    {prompt.type === 'project' ? <Lightbulb className=\"h-3.5 w-3.5 text-amber-200\" /> : <Target className=\"h-3.5 w-3.5 text-amber-200\" />}\n                                  </span>\n                                  <h5 className=\"font-medium text-sm text-gray-200\">\n                                    {prompt.type === 'project' ? 'Project Prompt' : `${features.find(f => f._id === prompt.featureId)?.title || 'Feature'}`}\n                                  </h5>\n                                </div>\n                                <div className=\"flex items-center\">\n                                  <span className=\"text-xs text-gray-400 mr-2\">\n                                    {new Date(prompt.createdAt).toLocaleTimeString()}\n                                  </span>\n                                  <ChevronDown className=\"h-4 w-4 text-gray-400 group-open:rotate-180 transition-transform\" />\n                                </div>\n                              </summary>\n                              <div className=\"bg-gray-900/70 rounded-b p-3 text-gray-300 text-xs whitespace-pre-wrap border-t border-amber-700/20 max-h-[200px] overflow-y-auto\">\n                                {prompt.content}\n                              </div>\n                            </details>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex justify-between\">\n                <button\n                  type=\"button\"\n                  onClick={handlePreviousStep}\n                  disabled={isLoading}\n                  className=\"inline-flex items-center px-6 py-3 border border-gray-700 text-gray-400 rounded-lg shadow-sm hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 transition-colors\"\n                >\n                  <ChevronLeft className=\"mr-2 h-5 w-5\" />\n                  Previous Step\n                </button>\n\n                <button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-600 to-yellow-700 text-white font-medium rounded-lg shadow-lg hover:from-amber-700 hover:to-yellow-800 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  Next Step\n                  <ChevronRight className=\"ml-2 h-5 w-5\" />\n                </button>\n              </div>\n            </form>\n          )}\n\n          {/* Step 6: Summary */}\n          {project.currentStep === 6 && features && (\n            <form onSubmit={handleSummarySubmit} className=\"space-y-8\">\n             \n              \n              {/* Project Mind Map / Tree Visualization */}\n              <div className=\"relative bg-gradient-to-b from-gray-900 to-blue-900/30 rounded-xl p-6 border border-blue-800/50 mb-10 overflow-hidden min-h-[600px]\">\n                <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(59,130,246,0.15),transparent_50%),radial-gradient(circle_at_70%_60%,rgba(168,85,247,0.15),transparent_50%)]\" />\n                \n                {/* Subtle grid background */}\n                <div className=\"absolute inset-0\" style={{\n                  backgroundImage: 'linear-gradient(to right, rgba(255,255,255,0.05) 1px, transparent 1px), linear-gradient(to bottom, rgba(255,255,255,0.05) 1px, transparent 1px)',\n                  backgroundSize: '20px 20px'\n                }} />\n                \n                <div className=\"relative z-10\">\n                  <h3 className=\"font-semibold text-xl mb-8 flex items-center text-gray-100\">\n                    <GitBranch className=\"h-5 w-5 mr-2 text-blue-400\" />\n                    Project Architecture\n                  </h3>\n                  \n                  {/* Mind Map / Tree Structure */}\n                  <div className=\"flex justify-center\">\n                    {/* Root Node (Project) */}\n                    <div className=\"flex flex-col items-center\">\n                      <div className=\"bg-gradient-to-r from-blue-600 to-indigo-600 p-5 rounded-xl border border-blue-400 shadow-lg shadow-blue-900/30 w-full max-w-md relative z-20 transform transition-transform hover:scale-105 hover:shadow-xl\">\n                        <div className=\"absolute -top-3 -right-3 bg-blue-500 text-white text-xs font-bold px-2 py-1 rounded-full border-2 border-blue-300\">\n                          Root\n                        </div>\n                        <h4 className=\"font-bold text-xl text-white\">{project.name}</h4>\n                        <p className=\"text-blue-100 mt-2 line-clamp-2\">{project.description}</p>\n                        <div className=\"mt-3 flex items-center space-x-3\">\n                          <span className=\"text-xs text-blue-100 bg-blue-700/70 px-2 py-1 rounded-md flex items-center\">\n                            <Target className=\"h-3 w-3 mr-1\" /> {features.length} Features\n                          </span>\n                          <span className=\"text-xs text-emerald-100 bg-emerald-700/70 px-2 py-1 rounded-md flex items-center\">\n                            <CheckSquare className=\"h-3 w-3 mr-1\" /> {features.filter(f => f.addedToTask).length} Tasks\n                          </span>\n                        </div>\n                      </div>\n                      \n                      {/* Main Connector */}\n                      <div className=\"h-16 w-0.5 bg-gradient-to-b from-blue-500 to-purple-500 relative my-1\">\n                        <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-6 h-6 rounded-full bg-purple-600 border-2 border-purple-300 flex items-center justify-center shadow-lg shadow-purple-900/30\">\n                          <ArrowDown className=\"h-3 w-3 text-white\" />\n                        </div>\n                      </div>\n                      \n                      {/* Category Branches */}\n                      <div className=\"grid grid-cols-1 gap-8 w-full\">\n                        {/* Group features by category */}\n                        {(() => {\n                          const categories: Record<string, typeof features> = {};\n                          features.forEach(feature => {\n                            if (!categories[feature.category]) {\n                              categories[feature.category] = [];\n                            }\n                            categories[feature.category].push(feature);\n                          });\n                          \n                          return Object.entries(categories).map(([category, categoryFeatures], categoryIndex) => (\n                            <div key={category} className=\"relative\">\n                              {/* Category Node */}\n                              <div className=\"flex flex-col items-center\">\n                                <div className={`bg-gradient-to-r ${getCategoryNodeColor(category)} p-4 rounded-lg border ${getCategoryBorderColor(category)} shadow-lg w-full max-w-sm mx-auto relative z-10 transform transition-transform hover:scale-105`}>\n                                  <h5 className=\"font-bold text-lg text-white flex items-center\">\n                                    {getCategoryIcon(category)}\n                                    <span className=\"ml-2\">{category}</span>\n                                  </h5>\n                                  <p className=\"text-sm text-gray-100 mt-1\">{categoryFeatures.length} feature{categoryFeatures.length !== 1 ? 's' : ''}</p>\n                                </div>\n                                \n                                {/* Branch Connector */}\n                                <div className=\"h-12 w-0.5 bg-gradient-to-b from-purple-500 to-pink-500 relative my-1\">\n                                  <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-4 h-4 rounded-full bg-pink-600 border border-pink-300 flex items-center justify-center\">\n                                    <ArrowDown className=\"h-2 w-2 text-white\" />\n                                  </div>\n                                </div>\n                                \n                                {/* Feature Nodes */}\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 w-full\">\n                                  {categoryFeatures.map((feature, featureIndex) => (\n                                    <div key={feature._id} className=\"relative\">\n                                      {/* Feature Card */}\n                                      <div \n                                        className={`bg-gradient-to-br ${feature.addedToTask ? 'from-emerald-900 to-green-800 border-emerald-500' : 'from-violet-900 to-indigo-800 border-violet-500'} \n                                        p-4 rounded-lg border shadow-lg h-full transition-all duration-300 hover:shadow-xl hover:translate-y-[-2px] relative z-10`}\n                                      >\n                                        {/* Priority Corner Badge */}\n                                        <div className={`absolute -top-2 -right-2 ${getPriorityBadgeColor(feature.priority)} text-white text-xs font-bold px-2 py-0.5 rounded-full shadow-md`}>\n                                          {feature.priority}\n                                        </div>\n                                        \n                                        <div className=\"flex items-start justify-between mb-3\">\n                                          <h5 className=\"font-semibold text-gray-100 pr-12\">{feature.title}</h5>\n                                        </div>\n                                        \n                                        <p className=\"text-sm text-gray-300 mb-3 line-clamp-2\">{feature.description}</p>\n                                        \n                                        <div className=\"flex items-center justify-between\">\n                                          <span className={`inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium ${getEffortBadgeColor(feature.effort)}`}>\n                                            <Target className=\"h-3 w-3 mr-1\" /> {feature.effort} Effort\n                                          </span>\n                                          \n                                          {feature.addedToTask && (\n                                            <span className=\"inline-flex items-center px-2 py-0.5 rounded-md text-xs font-medium bg-green-800/60 text-green-200 border border-green-600\">\n                                              <CheckSquare className=\"h-3 w-3 mr-1\" /> Task\n                                            </span>\n                                          )}\n                                        </div>\n                                        \n                                        <button\n                                          onClick={() => setExpandedFeature(expandedFeature === feature._id ? null : feature._id)}\n                                          className=\"text-xs font-medium flex items-center text-blue-400 hover:text-blue-300 mt-3\"\n                                        >\n                                          {expandedFeature === feature._id ? \"Hide Details\" : \"View Details\"}\n                                          <ChevronRight className={`ml-1 h-3 w-3 transition-transform ${expandedFeature === feature._id ? \"rotate-90\" : \"\"}`} />\n                                        </button>\n                                        \n                                        {expandedFeature === feature._id && (\n                                          <div className=\"mt-4 pt-4 border-t border-gray-700/50\">\n                                            <h6 className=\"text-xs font-semibold mb-2 text-gray-200 flex items-center\">\n                                              <Code className=\"h-3 w-3 mr-1\" /> Implementation Guide\n                                            </h6>\n                                            <p className=\"text-xs text-gray-300\">\n                                              {feature.implementationDetails || \"This feature can be implemented using modern web technologies.\"}\n                                            </p>\n                                          </div>\n                                        )}\n                                      </div>\n                                      \n                                      {/* Connecting lines between features (visible on larger screens) */}\n                                      {featureIndex < categoryFeatures.length - 1 && featureIndex % 2 === 0 && (\n                                        <div className=\"hidden md:block absolute top-1/2 right-0 w-4 h-0.5 bg-pink-500/50 transform translate-x-full\" />\n                                      )}\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                              \n                              {/* Connecting lines between categories */}\n                              {categoryIndex < Object.keys(categories).length - 1 && (\n                                <div className=\"h-8 w-0.5 bg-blue-500/50 mx-auto my-4\" />\n                              )}\n                            </div>\n                          ));\n                        })()}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Legend and Export */}\n              <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-4 mb-6\">\n                <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-3\">\n                  <h4 className=\"text-sm font-medium text-gray-300\">Blueprint Legend</h4>\n                  \n                  <div className=\"flex flex-col md:flex-row gap-2 mt-2 md:mt-0\">\n                    {/* Export Markdown Button */}\n                    <button\n                      onClick={handleExportMarkdown}\n                      disabled={isGeneratingMarkdown || !features || features.length === 0}\n                      className=\"inline-flex items-center px-3 py-1.5 bg-gradient-to-r from-blue-600 to-indigo-700 text-white text-xs font-medium rounded-lg hover:from-blue-700 hover:to-indigo-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n                    >\n                      {isGeneratingMarkdown ? (\n                        <>\n                          <Loader2 className=\"animate-spin h-3.5 w-3.5 mr-1.5\" />\n                          Exporting...\n                        </>\n                      ) : (\n                        <>\n                          <Download className=\"h-3.5 w-3.5 mr-1.5\" />\n                          Export as Markdown\n                        </>\n                      )}\n                    </button>\n                    \n                    {/* Generate PDF Documentation Button */}\n                    <button\n                      onClick={handleGeneratePdfDocumentation}\n                      disabled={isGeneratingPdf || !features || features.length === 0}\n                      className=\"inline-flex items-center px-3 py-1.5 bg-gradient-to-r from-amber-600 to-orange-700 text-white text-xs font-medium rounded-lg hover:from-amber-700 hover:to-orange-800 focus:outline-none focus:ring-2 focus:ring-amber-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-md\"\n                    >\n                      {isGeneratingPdf ? (\n                        <>\n                          <Loader2 className=\"animate-spin h-3.5 w-3.5 mr-1.5\" />\n                          Generating PDF...\n                        </>\n                      ) : (\n                        <>\n                          <FileText className=\"h-3.5 w-3.5 mr-1.5\" />\n                          Generate PDF Documentation\n                        </>\n                      )}\n                    </button>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                  <div className=\"flex items-center\">\n                    <div className=\"w-3 h-3 rounded-full bg-blue-500 mr-2\"></div>\n                    <span className=\"text-xs text-gray-400\">Project Root</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-3 h-3 rounded-full bg-purple-500 mr-2\"></div>\n                    <span className=\"text-xs text-gray-400\">Feature Categories</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-3 h-3 rounded-full bg-green-500 mr-2\"></div>\n                    <span className=\"text-xs text-gray-400\">Tasks</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-3 h-3 rounded-full bg-pink-500 mr-2\"></div>\n                    <span className=\"text-xs text-gray-400\">Features</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex justify-between pt-6\">\n                <button\n                  type=\"button\"\n                  onClick={handlePreviousStep}\n                  disabled={isLoading}\n                  className=\"inline-flex items-center px-6 py-3 border border-gray-700 text-gray-400 rounded-lg shadow-sm hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:ring-offset-2 transition-colors\"\n                >\n                  <ChevronLeft className=\"mr-2 h-5 w-5\" />\n                  Previous Step\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isLoading}\n                  className=\"inline-flex items-center px-8 py-3 bg-gradient-to-r from-blue-600 to-purple-700 text-white font-medium rounded-lg shadow-lg hover:from-blue-700 hover:to-purple-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200\"\n                >\n                  {isLoading ? <><Loader2 className=\"animate-spin mr-2 h-5 w-5\" />Finalizing Blueprint...</> : <>\n                    <CheckCircle className=\"mr-2 h-5 w-5\" />\n                    Finalize Blueprint\n                  </>}\n                </button>\n              </div>\n            </form>\n          )}\n\n        </div>\n      </div>\n\n      {/* Date Selection Modal */}\n      {showDateModal && (\n        <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center z-50\">\n          <div className=\"bg-gray-900 border border-gray-700 rounded-xl shadow-xl p-6 w-full max-w-md\">\n            <h3 className=\"text-xl font-bold text-gray-100 mb-4\">Task Details</h3>\n            <p className=\"text-sm text-gray-300 mb-6\">Set a due date and assign a team member for this task.</p>\n            \n            <div className=\"mb-6\">\n              <label htmlFor=\"dueDate\" className=\"block text-sm font-medium mb-2 text-gray-300\">Due Date</label>\n              <input\n                id=\"dueDate\"\n                type=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n              />\n            </div>\n\n            <div className=\"mb-6\">\n              <label htmlFor=\"assignedMember\" className=\"block text-sm font-medium mb-2 text-gray-300\">Assign To</label>\n              <select\n                id=\"assignedMember\"\n                value={selectedMember}\n                onChange={(e) => setSelectedMember(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-700 rounded-lg bg-gray-800 text-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors\"\n                disabled={!projectMembers || projectMembers.length === 0}\n              >\n                <option value=\"\">Not assigned</option>\n                {projectMembers && projectMembers.map((member) => (\n                  <option key={member.userId} value={member.userId}>\n                    {member.name} ({member.role})\n                  </option>\n                ))}\n              </select>\n              {!projectMembers && <p className=\"text-xs text-gray-400 mt-1\">Loading members...</p>}\n              {projectMembers && projectMembers.length === 0 && <p className=\"text-xs text-gray-400 mt-1\">No project members available</p>}\n            </div>\n            \n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => setShowDateModal(false)}\n                className=\"px-4 py-2 bg-gray-700 text-gray-200 rounded-lg hover:bg-gray-600 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={async () => {\n                  if (currentFeatureId) {\n                    setIsLoading(true);\n                    try {\n                      // Convert selected date to ISO string and then to timestamp\n                      let dueDateTimestamp: number | undefined = undefined;\n                      if (selectedDate) {\n                        const dateObj = new Date(selectedDate);\n                        if (!isNaN(dateObj.getTime())) {\n                          // Store as ISO string timestamp\n                          dueDateTimestamp = dateObj.getTime();\n                        }\n                      }\n                      \n                      await addFeatureToTask({\n                        featureId: currentFeatureId,\n                        projectId: projectId as Id<\"projects\">,\n                        dueDate: dueDateTimestamp,\n                        assignedTo: selectedMember || undefined\n                      });\n                      \n                      setShowDateModal(false);\n                      setCurrentFeatureId(null);\n                      setSelectedMember(\"\");\n                      setSelectedDate(\"\");\n                    } catch (err) {\n                      setError(err instanceof Error ? err.message : String(err));\n                    } finally {\n                      setIsLoading(false);\n                    }\n                  }\n                }}\n                disabled={isLoading}\n                className=\"px-4 py-2 bg-gradient-to-r from-indigo-600 to-blue-700 text-white rounded-lg hover:from-indigo-700 hover:to-blue-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"animate-spin h-4 w-4 mr-2\" />\n                    Processing...\n                  </>\n                ) : (\n                  'Add to Task'\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}